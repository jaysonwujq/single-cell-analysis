rm(list = ls())
dev.off()

setwd('D:/LX_2019_GZR/新建文件夹/')
getwd()
dir()

count<-read.table('hscdatadg20181226.txt',sep = '\t',stringsAsFactors = F,header = T,row.names = 1)

##绠€鍗曠殑浠ｇ爜
length(which(count[rownames(count) %in% "Actb",]>0))
length(which(count[rownames(count) %in% "Gapdh",]>0))
length(which(count[rownames(count) %in% "Kit",]>0))
length(which(count[rownames(count) %in% "Ly6a",]>0))


########閬庢烤鍩哄洜 绛涢€夊钩鍧囧€间笉涓?0鐨勬牱鍝侊紝绛涢€夎嚦灏戝湪5涓粏鑳炰腑琛ㄨ揪鐨刧ene锛涳紱
data <- count[rowMeans(count[,1:155]) != 0 & rowSums(!!count[,1:155]) > 10,]

##姣忚姹傚拰锛岄€夊彇姣忚鍜屼负0 浠ヤ笂鐨勬ǎ鍝乻am妯ｅ搧sample锛侊紒锛?
data_dg <- data[,colnames(data[,colSums(data) > 0])]


###Deseq
exprSet<-data_dg
head(exprSet)
tmp<-exprSet[-c(1,2,3,4),]
colnames(tmp)

group<-c(paste("younghsc",1:800,sep="_"),paste("oldhsc",1:800,sep="_"))
feizu<-c(rep("younghsc",800),rep("oldhsc",800))

GROUP<-data.frame(group,feizu) ##鍋氬ソ鍒嗙粍鍥犲瓙鍗冲彲
group_list=GROUP$feizu  ###鎸囨槑鍒嗙粍淇℃伅鍗冲彲锛?
##鍋氬ソ鍒嗙粍鍥犲瓙鍗冲彲


library(DESeq2)

colData <- data.frame(row.names=colnames(tmp), group_list=group_list)
##鍒朵綔濂芥暟鎹
dds <- DESeqDataSetFromMatrix(countData = tmp,
                              colData = colData,
                              design = ~ group_list)
##鎸夌収DESeq2鏂规硶鍒朵綔dds瀵硅薄,涓嶈兘瀛樺湪na鍊硷紝绯荤粺瀛︿範杩欎釜鍖呫€傘€備笉琛ㄨ揪鐢?0琛ㄧず锛屼笉鏄疦A锛屾敞鎰忋€傘€傘€?
dds2 <- DESeq(dds)  ##鐩存帴鐢―ESeq鍑芥暟,鏍囧噯鍖?
resultsNames(dds2)

res <-  results(dds2, contrast=c("group_list","oldhsc","younghsc"))
## 鎻愬彇浣犳兂瑕佺殑宸紓鍒嗘瀽缁撴灉锛屾垜浠繖閲屾槸oldhsc缁勫younghsc缁勮繘琛屾瘮杈?,yonghsc涓篺涓哄垎姣嶏紱

resOrdered <- res[order(res$padj),]
write.table(resOrdered, file="single cell DGE order old young.csv", sep=",",quote=F)

diffsig<- subset(resOrdered, padj < 0.05)
diffsig2<- subset(diffsig, abs(log2FoldChange)>1)


diffsig<- subset(resOrdered, padj < 0.05)
diffsig3<- subset(diffsig, abs(log2FoldChange)>2)

dim(diffsig3)
rownames(diffsig3)
write.table(diffsig3, file="DGE order old young_P0.05fc4.csv", sep=",",quote=F)

length(diffsig)  ##闀垮害
dim(diffsig)  ##缁村害
dim(diffsig2)

write.table(diffsig, file="DGE order old youngp0.05.csv", sep=",",quote=F)
write.table(diffsig2, file="DGE order old young_P0.05fc2.csv", sep=",",quote=F)
diffupsig<- subset(diffsig, log2FoldChange >1)
write.table(diffupsig, file="single cell DGE order old young up.csv", sep=",",quote=F)
dim(diffupsig)
diffdownsig<- subset(diffsig, log2FoldChange <(-1))
dim(diffdownsig)

write.table(diffupsig, file="single cell DGE order young old down.csv", sep=",",quote=F)

#####KEGG
source("http://bioconductor.org/biocLite.R")
options(BioC_mirror="http://mirrors.ustc.edu.cn/bioc/")
biocLite("GOstats")
biocLite("org.Mm.eg.db")
nbiocLite("KEGG.db")
biocLite("clusterProfiler")

library(GOstats)
#library(org.Hs.eg.db)
library(KEGG.db)

library(org.Hs.eg.db)
library(biomaRt)
library(clusterProfiler)
library("org.Mm.eg.db")



probeset=rownames(diffsig3)

length(unique(probeset))
diff_gene_list <- unique(probeset)
diff_gene_list

org.Mm.eg.db

hyperG.params = new("KEGGHyperGParams", geneIds=diff_gene_list, universeGeneIds=NULL, annotation="org.Mm.eg.db",
                    
                    categoryName="KEGG", pvalueCutoff=1, testDirection = "over")

KEGG.hyperG.results = hyperGTest(hyperG.params)

htmlReport(KEGG.hyperG.results, file="kegg.enrichment2.html", summary.args=list("htmlLinks"=TRUE))

getwd()
##########



resOrdered2=as.data.frame(resOrdered)
###娉ㄦ剰杩欎釜鍛戒护鐨勭敤閫旓紝灏唕esOrdered 鍙樻垚鏁版嵁妗嗐€傘€傘€?
##鍙互鐪嬪埌绋嬪簭闈炲父濂界敤锛佸畠鍙RNA-seq鐨勫熀鍥犵殑reads鐨刢ounts鏁拌繘琛屽垎鏋愶紝璇蜂笉瑕佺敤RPKM绛夌粡杩囦簡normlization鐨勮〃杈剧煩闃垫潵鍒嗘瀽銆?


plotMA(resOrdered) ###plotMA()涓笉鑳芥槸涓€涓暟鎹 
plotMA(res, main="single cell", ylim=c(-2,2)) ####### 
##鍊煎緱涓€鎻愮殑鏄疍ESeq2杞欢鐙湁鐨刵ormlization鏂规硶锛?
####################################################
rld <- rlogTransformation(dds2)  ## 寰楀埌缁忚繃DESeq2杞欢normlization鐨勮〃杈剧煩闃礳ount锛? 闇€鎻愬彇xu闇€鎻愬彇闇€tiqu
exprSet_new=assay(rld)

par(cex = 0.7)
n.sample=ncol(exprSet)
#######if(n.sample>40) par(cex = 0.5)    ###40鍙互淇敼
cols <- rainbow(n.sample*1.2)
par(mfrow=c(1,1))
##璁剧疆鍥惧舰鍙傛暟锛岄鑹插弬鏁?
boxplot(exprSet, col = cols,main="expression value",las=2)
boxplot(exprSet_new, col = cols,main="expression value",las=2)
hist(exprSet)
hist(exprSet_new)
###鐢╡xpreSet_new???

##閽堝澶氱粍鍒嗘瀽锛?
countTable <- round(mydata)
dds <- DESeqDataSetFromMatrix(countData=countTable, 
                              colData=mycellDesign, design=~ source)
dds <- DESeq(dds)
res_DvsDCC <- results(dds,contrast=c("source", "D","DCC"))
res_DvsDLC <- results(dds,contrast=c("source", "D","DLC"))
res_DvsP <- results(dds,contrast=c("source", "D","P"))
res_DCCvsDLC <- results(dds,contrast=c("source", "DCC","DLC"))
res_DCCvsP <- results(dds,contrast=c("source", "DCC","P"))
res_DLCvsP <- results(dds,contrast=c("source", "DLC","P"))
summary(res_DvsDCC)
resOrdered_DvsDLC <- res_DvsDLC[order(res_DvsDLC$padj), ]
resSig_DvsDLC <- subset(resOrdered_DvsDLC, padj < 0.1 )
write.table(resOrdered_DvsDLC, file="DvsDLC_DESeq2_results.txt",sep="\t",quote=F)


packageVersion("Seurat")

source(“https://bioconductor.org/biocLite.R“) 
biocLite("Seurat")



###Seurat 鍒嗘瀽  娉ㄦ剰鐗堟湰 which version  ##packageVersion("Seurat")
library(Seurat)
library(dplyr)
library(Matrix)


colnames(count2)
dim(count)
count2<-count[-c(1,2,3,4,5),]

#pbmc <- new("seurat", raw.data = count2)
pbmc <- Setup(pbmc, min.cells = 3, min.genes = 200, do.logNormalize = T, total.expr = 1e4, project = "HSC")

pbmc <- CreateSeuratObject(raw.data = count2, min.cells = 3, min.genes = 200, project = "HSC")  #version 3锛?

#####
mito.genes <- grep(pattern = "^MT-", x = rownames(x = pbmc@data), value = TRUE)
percent.mito <- Matrix::colSums(pbmc@raw.data[mito.genes, ])/Matrix::colSums(pbmc@raw.data)

# AddMetaData adds columns to object@meta.data, and is a great place to
# stash QC stats
pbmc <- AddMetaData(object = pbmc, metadata = percent.mito, col.name = "percent.mito")
VlnPlot(object = pbmc, features.plot = c("nGene", "nUMI", "percent.mito"), nCol = 3)

par(mfrow = c(1, 2))
GenePlot(object = pbmc, gene1 = "nUMI", gene2 = "percent.mito")
GenePlot(object = pbmc, gene1 = "nUMI", gene2 = "nGene")


###filter out cells 
pbmc <- FilterCells(object = pbmc, subset.names = c("nGene", "percent.mito"), 
                    low.thresholds = c(200, -Inf), high.thresholds = c(2500, 0.05))   ##accroding to the above results


##Normalize the results
pbmc <- NormalizeData(object = pbmc, normalization.method = "LogNormalize", scale.factor = 10000)

##Detection of variable genes across the single cells
pbmc <- FindVariableGenes(pbmc, x.low.cutoff = 0.0125, x.high.cutoff = 3, y.cutoff = 0.5, do.contour = F)
length(pbmc@var.genes)


####################
##pca
pbmc <- RunPCA(pbmc, pc.genes = pbmc@var.genes, do.print = TRUE, pcs.print = 5, genes.print = 5)
pbmc <- ProjectPCA(pbmc)
PrintPCA(pbmc, pcs.print = 1:5, genes.print = 5, use.full = TRUE)
VizPCA(pbmc, 1:2)
PCAPlot(pbmc, 1, 2,pt.size=3)
PCAPlot(pbmc, 2, 3)

PCHeatmap(pbmc, pc.use = 1, cells.use = 50, do.balanced = TRUE)
PCHeatmap(pbmc, pc.use = 2, cells.use = 50, do.balanced = TRUE)
#PCHeatmap(pbmc, pc.use = 1, cells.use = 50, do.balanced = T,label.columns = FALSE)

###samples

#pbmc <- FindClusters(pbmc, pc.use = 1:10, resolution = 0.6, print.output = 0, save.SNN = T)
pbmc <- RunTSNE(pbmc, dims.use = 1:10, do.fast = T)
TSNEPlot(pbmc,pt.size=3)


####accroding to gene matrix
pbmc <- FindClusters(pbmc, pc.use = 1:10, resolution = 0.6, print.output = 0, save.SNN = T)
pbmc <- RunTSNE(pbmc, dims.use = 1:10, do.fast = T)
TSNEPlot(pbmc,pt.size=3)



###20181218 results

FeaturePlot(pbmc, c("ACTB","GAPDH","KIT","PTPRC","CD47","CD34"),cols.use = c("grey","blue"))


VlnPlot(pbmc, c("Actb","Gapdh","Ly6a","Kit", "Flt3","Ptprc","Hoxb4","Erg","Myb"))

,"Cd47","Cd34","Flt3","Erg","Myb","Hoxb4"))

VlnPlot(pbmc, c("Actb","Gapdh","Ly6a","Kit", "Procr","Ptprc","Itgam","Cd47","Cd34","Flt3","Erg","Myb","Hoxb4","Cd48","Slamf1","Pecam1","Gata2","Meis1","Cd164","Cd55","Cd63","Cd69","Cd44","Cd53","Cd52","Cd79b","Cd81","Cd93","Ctnna1","Bmi1","Lmo2","Etv3","Etv6","Runx1","Sox4","Atg7","Hif1a","Hmmr","Itga2b","Itgb1","Itga4","Cd24a"))



##############

current.cluster.ids <- c(0, 1, 2, 3, 4, 5,6,7,8)

##find marks
cluster1.markers <- FindMarkers(pbmc, ident.1 = "0", min.pct = 0.25)
print(head(cluster1.markers, 20))
#VlnPlot(pbmc,c("DAD1","NEGR1","TCF4","RNF220"))

cluster2.markers <- FindMarkers(pbmc, ident.1 = "1", min.pct = 0.25)
print(head(cluster2.markers, 30))
#VlnPlot(pbmc,c("HBD","PCDH9","MT-ATP6","PLCB1"))

cluster3.markers <- FindMarkers(pbmc, ident.1 = "2", min.pct = 0.25)
print(head(cluster3.markers, 20))
#VlnPlot(pbmc,c("AKAP12","MME","NFKBIA","FBLN7"))

cluster4.markers <- FindMarkers(pbmc, ident.1 = "3", min.pct = 0.25)
print(head(cluster4.markers, 20))
#VlnPlot(pbmc,c("PTMA","CD74","EEF1A1","MALAT1"))

cluster5.markers <- FindMarkers(pbmc, ident.1 = "4", min.pct = 0.25)
print(head(cluster5.markers, 20))
#VlnPlot(pbmc,c("DLG2","GRID2","EYS","HMGA2"))

cluster6.markers <- FindMarkers(pbmc, ident.1 = "5", min.pct = 0.25)
print(head(cluster6.markers, 20))
#VlnPlot(pbmc,c("Kit","Ly6a","Cd79a","Cd19"))


cluster7.markers <- FindMarkers(pbmc, ident.1 = "6", min.pct = 0.25)
print(head(cluster6.markers, 20))


cluster8.markers <- FindMarkers(pbmc, ident.1 = "7", min.pct = 0.25)
print(head(cluster6.markers, 20))


cluster9.markers <- FindMarkers(pbmc, ident.1 = "8", min.pct = 0.25)
print(head(cluster6.markers, 20))


FeaturePlot(pbmc, c("Kit","Ly6a","Cd79a","Ptma",cols.use = c("grey","blue"),pt.size = 2))

FeaturePlot(pbmc, c("Kit","Ly6a","Cd79a","Cd19","Actb","Gapdh","Ubb","B2m","Tpt1","Rpl31","Stmn1","Nfkbia","Cd44","Rpl27","Tuba1b"),cols.use = c("grey","blue"),pt.size = 2)

Tuba1b Cd44 Nfkbia Xist Nupr1 Eif5 




FeaturePlot(pbmc, c("Kit","Ly6a","Cd79a","Ptma","Rps27"),cols.use = c("grey","blue"),pt.size = 2)








###############33
##find subtype
pbmc@ident
x<-as.data.frame(pbmc@ident)
gene<-as.data.frame(row.names(x))
yy<-data.frame(gene,x)
aa0<-as.data.frame(yy[yy$pbmc.ident=="0",])
aa1<-as.data.frame(yy[yy$pbmc.ident=="1",])
aa2<-as.data.frame(yy[yy$pbmc.ident=="2",])
aa3<-as.data.frame(yy[yy$pbmc.ident=="3",])
aa4<-as.data.frame(yy[yy$pbmc.ident=="4",])
aa5<-as.data.frame(yy[yy$pbmc.ident=="5",])
aa6<-as.data.frame(yy[yy$pbmc.ident=="6",])
head(b)

write.csv(x,"all_samples_group6.csv")

colnames(b)
##draw pictures
current.cluster.ids <- c(0, 1, 2, 3, 4, 5,6,7,8)
new.cluster.ids <- c("P1_BR","P2P3_R1", "P2P3_R2","P1_BR_P2P3_R1","P1_BR_P2P3_R2","P2P3_B3")
pbmc@ident <- plyr::mapvalues(pbmc@ident, from = current.cluster.ids, to = new.cluster.ids)
TSNEPlot(pbmc, do.label = T, pt.size = 3)

#淇敼ID
current.cluster.ids <- c("P1_BR","P2P3_R1", "P2P3_R2","P1_BR_P2P3_R1","P1_BR_P2P3_R2","P2P3_B3")
new.cluster.ids <- c("P1_BR","P2P3_R1", "P2P3_R2","P1_BR_P2P3_R1","P1_BR_P2P3_R2","P2P3_R3")
pbmc@ident <- plyr::mapvalues(pbmc@ident, from = current.cluster.ids, to = new.cluster.ids)
TSNEPlot(pbmc, do.label = T, pt.size = 3)


a<-upper("ACTB","Gapdh","Ly6a","Kit", "Procr","Ptprc","Itgam","Cd47","Cd34","Flt3","Erg","Myb","Hoxb4")

##before analysis
VlnPlot(pbmc, "Actb")
VlnPlot(pbmc, c("ACTB","Gapdh","Ly6a","Kit", "Procr","Ptprc","Itgam","Cd47","Cd34","Flt3","Erg","Myb","Hoxb4"))
VlnPlot(pbmc, c("Cd48","Slamf1","Pecam1","Gata2","Meis1","Cd164","Cd55","Cd63","Cd69","Cd44","Cd53","Cd52","Cd79b","Cd81","Cd93","Ctnna1"))
##"Procr "CD201"
##"Ptprc"CD45"
##Itgam mac1
VlnPlot(pbmc,c("Bmi1","Lmo2","Etv3","Etv6","Runx1","Sox4","Atg7","Hif1a","Hmmr","Itga2b","Itgb1","Itga4","Cd24a"))
####
VlnPlot(pbmc, c("Actb","Gapdh","Ly6a","Kit", "Procr","Ptprc","Itgam","Cd47","Cd34","Flt3","Erg","Myb","Hoxb4","Cd48","Slamf1","Pecam1","Gata2","Meis1","Cd164","Cd55","Cd63","Cd69","Cd44","Cd53","Cd52","Cd79b","Cd81","Cd93","Ctnna1","Bmi1","Lmo2","Etv3","Etv6","Runx1","Sox4","Atg7","Hif1a","Hmmr","Itga2b","Itgb1","Itga4","Cd24a"))


VlnPlot(pbmc, c("ACTB","GAPDH","KIT","PTPRC","CD47","CD34","FLT3","ERG","MYB","HOXB4"))
##summary
VlnPlot(pbmc, c("PTPRD","PTPN13","DMD","CDH13","IL1RAPL1", "PTMA","CD74","EEF1A1","MALAT1"))
VlnPlot(pbmc, c("KLF6","TPT1","EZR","ATP5B","CD34","PAX5"))
VlnPlot(pbmc,c("ACTB","GAPDH"))
VlnPlot(pbmc,c("CD47"))

FeaturePlot(pbmc, "CD19",cols.use = c("grey","blue"),pt.size = 2)
FeaturePlot(pbmc, c("CD19","MME"),cols.use = c("grey","red"),pt.size=2)
TSNEPlot(pbmc, do.label = F, pt.size = 3)
save(pbmc, file = "cart.Robj")      

FeaturePlot(pbmc, c("Kit","Ly6a","Cd79a","Cd19","Actb","Gapdh","Ubb","B2m","Tpt1","Rpl31","Stmn1","Nfkbia","Cd44","Rpl27","Tuba1b"),cols.use = c("grey","blue"),pt.size = 2)

Tuba1b Cd44 Nfkbia Xist Nupr1 Eif5 


##find marks
cluster1.markers <- FindMarkers(pbmc, ident.1 = "0", min.pct = 0.25)
print(head(cluster1.markers, 20))
#VlnPlot(pbmc,c("DAD1","NEGR1","TCF4","RNF220"))

cluster2.markers <- FindMarkers(pbmc, ident.1 = "1", min.pct = 0.25)
print(head(cluster2.markers, 30))
#VlnPlot(pbmc,c("HBD","PCDH9","MT-ATP6","PLCB1"))

cluster3.markers <- FindMarkers(pbmc, ident.1 = "2", min.pct = 0.25)
print(head(cluster3.markers, 20))
#VlnPlot(pbmc,c("AKAP12","MME","NFKBIA","FBLN7"))

cluster4.markers <- FindMarkers(pbmc, ident.1 = "3", min.pct = 0.25)
print(head(cluster4.markers, 20))
#VlnPlot(pbmc,c("PTMA","CD74","EEF1A1","MALAT1"))

cluster5.markers <- FindMarkers(pbmc, ident.1 = "4", min.pct = 0.25)
print(head(cluster5.markers, 20))
#VlnPlot(pbmc,c("DLG2","GRID2","EYS","HMGA2"))

cluster6.markers <- FindMarkers(pbmc, ident.1 = "5", min.pct = 0.25)
print(head(cluster6.markers, 20))
#VlnPlot(pbmc,c("Kit","Ly6a","Cd79a","Cd19"))


cluster7.markers <- FindMarkers(pbmc, ident.1 = "6", min.pct = 0.25)
print(head(cluster6.markers, 20))


cluster8.markers <- FindMarkers(pbmc, ident.1 = "7", min.pct = 0.25)
print(head(cluster6.markers, 20))


cluster9.markers <- FindMarkers(pbmc, ident.1 = "8", min.pct = 0.25)
print(head(cluster6.markers, 20))







FeaturePlot(pbmc, c("PCDH9"),cols.use = c("grey","blue"))
FeaturePlot(pbmc, c("DAD1","NEGR1","RNF220","NFKBIA","AKAP12","DMD","PTPRD","PTPN13","CD34"),cols.use = c("grey","blue"))


##
pbmc.markers <- FindAllMarkers(pbmc, only.pos = TRUE, min.pct = 0.25, thresh.use = 0.25)
pbmc.markers %>% group_by(cluster) %>% top_n(2, avg_diff)
pbmc.markers %>% group_by(cluster) %>% top_n(8, avg_diff) -> top8
DoHeatmap(pbmc, genes.use = top8$gene, order.by.ident = TRUE, slim.col.label = T, remove.key = TRUE)
??DoHeatmap

##do.return = TRUE 涓虹敓鎴愯〃鏍?
#a<-DoHeatmap(pbmc, genes.use = top8$gene, order.by.ident = TRUE, slim.col.label = T, remove.key = TRUE, do.return = TRUE)

bbbb <- colSums(!!b[,1:800])
c<-b[rowMeans(b[,1:800]) !=0,] ###鍘婚櫎鍋囧熀鍥? 
d<-b[rowSums(!!b[,1:800])>20,]
head(d)
dim(d)

ddd <- colSums(!!d[,1:800])
barplot(ddd)
boxplot(ddd)
mean(ddd)

length(which(ddd>2000))
length(which(ddd<2000))
length(which(ddd==2000))

min(ddd)
max(ddd)

xxxx<-as.data.frame(ddd)
lou<-d[,which(xxxx$ddd>2000)]

bb<-xxxx[1:400,]
mean(bb)
aa<-xxxx[401:800,]
mean(aa)

####zhouxia
zx<-read.table("zhouxia_800cells_dg.txt",header = T,row.names = 1,sep="\t")
zz<-zx[rowSums(!!zx[,1:800])>20,]
dddd <- colSums(!!zz[,1:800])
barplot(dddd)
boxplot(dddd)
mean(dddd)

xxxx<-as.data.frame(dddd)
yy<-d[,which(xxxx$dddd>2000)]

bb<-xxxx[1:400,]
mean(bb)
aa<-xxxx[401:800,]
mean(aa)

##zhouxia analysis
dir()
zxb<-read.table("zhouxia_B_CD19.txt",header = T,row.names = 1,sep="\t")
zz<-zxb[rowSums(!!zxb[,1:42])>3,]
dddd <- colSums(!!zz[,1:42])
barplot(dddd)
boxplot(dddd)
mean(dddd)

xxxx<-as.data.frame(dddd)
yy<-zz[,which(xxxx$dddd>1000)]

yy[rownames(yy)=="CD19",]
zxb[rownames(zxb)=="CD19",]

###zhouxia zyc
dir()

zyc<-read.table("zhouxia589.csv",header = T,row.names = 1,sep=",")
zz<-zyc[rowSums(!!zyc[,1:589])>20,]
dddd <- colSums(!!zz[,1:589])
barplot(dddd)
boxplot(dddd)
mean(dddd)

xxxx<-as.data.frame(dddd)
yy<-zz[,which(xxxx$dddd>1000)]
colnames(yy)

write.table(yy,"zhouxiaz_filter.txt",sep = "\t")
BB<-yy[,1:94]
colnames(BB)
write.table(BB,"zhouxiaz_filte_B.txt",sep = "\t")

XX<-as.data.frame(colSums(BB[,1:94]))

AA<-yy[,95:339]
colnames(AA)
write.table(AA,"zhouxiaz_filte_R.txt",sep = "\t")

###normalizie for BB by DESEQ2
colnames(yy)
group<-as.data.frame(c(rep("B",94),rep("R",245)))

group_list=group$`c(rep("B", 94), rep("R", 245))`

colData <- data.frame(row.names=colnames(yy), group_list=group_list)


## DESeq 鏍囧噯鍖?

source("http://bioconductor.org/biocLite.R")
biocLite("RSQLite")
biocLite("digest")
biocLite("DESeq2")
options(BioC_mirror="http://mirrors.ustc.edu.cn/bioc/")
library(DESeq2)
dds <- DESeqDataSetFromMatrix(countData = yy,
                              colData = colData,
                              design = ~ group_list)


dds2 <- DESeq(dds)  
resultsNames(dds2)
rld <- rlogTransformation(dds2) 
exprSet_new=assay(rld)

hist(yy)
hist(exprSet_new)

###scale zhouxia before
dir()
zyc_f_b<-read.table("zhouxiaz_filte_B.txt",header = T,row.names = 1,sep="\t")
head(zyc_f_b)
zyc_b_new<-scale(zyc_f_b)
hist(zyc_b_new[rownames(zyc_b_new)=="GAPDH",])
boxplot(zyc_b_new[rownames(zyc_b_new)=="GAPDH",])
barplot(zyc_b_new[rownames(zyc_b_new)=="GAPDH",])

